package Selenium;

import static org.testng.Assert.assertEquals;
import java.util.concurrent.TimeUnit;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Test;

public class TestNG {

	
	public WebDriver driver;

	 @BeforeTest
	 public void Setup() {		 		 
			//Create instance of WebDriver
			driver = new FirefoxDriver();
			
			//Set system properties
			System.setProperty("webdriver.chrome.driver","C:\\SeleniumBrowserDrivers\\chromedriver.exe");
			
			//Put a Implicit wait, this means that any search for elements on the page could take the time the implicit wait is set for before throwing exception 
			driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			
			//maximize the window
			driver.manage().window().maximize();
			  
			//Open url into browser
			driver.get("https://opensource-demo.orangehrmlive.com/");
			assertEquals(driver.getTitle(), "OrangeHRM");
	 }
	  
	
	  @Test
	  public void Login() {
		  
			//Enter username
			WebElement username = driver.findElement(By.name("txtUsername"));
			username.clear();
			username.sendKeys("Admin");
			
			//Enter password
			WebElement password = driver.findElement(By.name("txtPassword"));
			password.clear();
			password.sendKeys("admin123");
			
			//click on sign-in button
			driver.findElement(By.name("btnLogin")).click();	
			assertEquals(driver.findElement(By.cssSelector("h1")).getText(), "Dashboard");	
	  }
	  

	@AfterTest
	public void CleanUp() {

			//Click on Sign off link
			driver.findElement(By.id("welcome")).click();
			driver.findElement(By.linkText("Logout")).click();
		
			//close the browser
			driver.close();
			
			//Quit all the browser driver
			driver.quit();
		  
	}



}
